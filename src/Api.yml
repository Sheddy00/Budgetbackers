openapi: 3.0.3
info:
  title: Bank Account API
  description: API for managing bank accounts, currencies, and transactions
  version: 1.0.0
tags:
  - name: Account
  - name: Currency
  - name: Transaction
paths:
  /account:
    get:
      summary: Get all accounts
      tags:
        - Account
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      summary: Create a new account
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      summary: Delete an account
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /currency:
    get:
      summary: Get all currencies
      tags:
        - Currency
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
  /transaction:
    get:
      summary: Get all transactions
      tags:
        - Transaction
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Create a new transaction
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      summary: Delete a transaction
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    put:
      summary: Update a transaction
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        balance:
          type: number
          format: double
        currency:
          type: string
        password:
          type: string
      example:
        id: 1
        name: "John Doe"
        balance: 1000.00
        currency: "USD"
        password: "securepassword"

    Currency:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        country:
          type: string
      example:
        - id: 1
          code: MGA
          name: Ariary
          country: Tananarive
        - id: 2
          code: EUR
          name: Euro
          country: France

    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        senderAccountId:
          type: integer
          format: int64
        receiverAccountId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
        currency:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
      example:
        id: 3
        senderAccountId: 123456
        receiverAccountId: 789012
        amount: -20.00
        currency: "USD"
        description: "Withdraw from account 1"
        date: "2023-01-03T10:45:00Z"
